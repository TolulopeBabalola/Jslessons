// write a simple interest function

function simpleInterest(p, r, t) {
    return (p * r * t) / 100;
}
var result = simpleInterest(2000, 3, 2);
console.log(`The result is ${result}`);


// dept I grad from
function grad(dept) {
    return (`${dept}`)
}
grad("physics");


// multiplication of a given number
let mult = (c) => c * c;
mult(3);

// multiplication of any given number by values btwn 0 and 12
// mulitiplication table created
function multiply(num) {
    for (let i = 1; i <= 12; i++) {
        var ans = (`${num} x ${i} = ${num * i}`);
        console.log(ans);
    }
}
multiply(7);


// function that returns one of the names in the array
// mindset here was that I converted array to obj using a for of loop 
function yourName(nameInput) {
    const names = ["Joy", "Alex", "Adamu", "Bimpe"];
    for (const name of names) {
        if (nameInput === name) {
            console.log(`Hey! input matches ${name}`)
        } else {
            console.log("not a match!")
        }
    }
}
yourName("Tolu");

// function that returns the the name adamu
//  mindset here was using default parameter
function yourName(name = "Adamu") {
    if (`${name}`) {
        console.log(`${name}`)
    } else {
        console.log("not a match!")
    }
}
yourName();

// find the person called Gab from the array of objects
const persons = [
    {
        name: "Goodness",
        age: 13
    },
    {
        name: "Jamiu",
        age: 18
    },
    {
        name: "Gab",
        age: 24
    }
]

const bio = persons.find(findGab);

function findGab(person) {
    return person.name === "Gab";
}
console.log(bio);


//  filter out resturants that are still open at 9pm

const resturants = [
    {
    name: "bukkahut",
    openTime: "8am",
    closeTime: "7pm"
    },

    {
        name: "mrbigs",
        openTime: "9am",
        closeTime: "9pm"
        },

        
    {
        name: "tantiz",
        openTime: "7.30am",
        closeTime: "9.30pm"
        },

        
    {
        name: "Sweet Sensation",
        openTime: "6am",
        closeTime: "9pm"
        }
]

const filteredResturant = resturants.filter(function(resturant){
    return resturant.closeTime === "9pm";
})

console.log(filteredResturant);


// Display the names and locations of school only
const mySchool = [
    {
        name: "Alabian",
        location: "Nigeria",
        course_Taught: "Coding",
        duration: "3 months",
        price: 100.00
    },
    {
        name: "w3schools",
        location: "USA",
        course_Taught: "Programs",
        duration: "self paced",
        price: 0.00
    },
    {
        name: "freecodecamp",
        location: "Uk",
        course_Taught: "Programming",
        duration: "3 months",
        price: 1.00
    },
    {
        name: "Tbabs",
        location: "Uk",
        course_Taught: "Prog",
        duration: "3 months",
        price: 10.00
    }
]

const schools = mySchool.map(function (school) {
    return {
        name: school.name,
        loaction: school.location
    }
});
console.log(schools);

// Find schools with price less than $10
// babe don't be decieved by the word find, just assume a customer used the  word
const schoolData = [
    {
        name: "Alabian",
        location: "Nigeria",
        course_Taught: "Coding",
        duration: "3 months",
        price: 100.00
    },
    {
        name: "w3schools",
        location: "USA",
        course_Taught: "Programs",
        duration: "self paced",
        price: 0.00
    },
    {
        name: "freecodecamp",
        location: "Uk",
        course_Taught: "Programming",
        duration: "3 months",
        price: 1.00
    },
    {
        name: "Tbabs",
        location: "Uk",
        course_Taught: "Prog",
        duration: "3 months",
        price: 10.00
    }
]

const getPrice = schoolData.map(function(school){
    if(school.price <= 10.00){
        return  {
            name:school.name,
            price: "$" + school.price
        }   
    }else{
        return "higher price!";
    }
})
console.log(getPrice);


// Create a students grading system

let jambScore = prompt("Enter your Jamb score");

let A="Distinction"; 
B="Very Good "; 
C="Good"; 
D="Pass"; 
F="Fail";

if (jambScore >=70 && jambScore <=100){
    alert(`Your have grade A = ${A}`)
} else if (jambScore >=60 && jambScore <=69) {
    alert(`Your have grade B = ${B}`)
} else if (jambScore >=50 && jambScore <=59) {
    alert(`Your have grade C = ${C}`)
} else if (jambScore >=40 && jambScore <=49) {
    alert(`Your have grade D = ${D}`);
}else {
    alert(`Your have grade F = ${F}`);
    }

//  Using ternary operator, write a program to determine whether a student passed or failed

let pass = 50; let grade = 67;
grade >= `${pass}` ? console.log("Congrstulations! You passed") : console.log("please resit!")


// Create a class named "Student" which will inherit the methods from the "person class"
class Person {
    constructor (name, prefect) {
        this.name = name;
        this.prefect = prefect;
    }

    greet(){
        console.log(`Hello ${this.name}`);
    }
    office(){
        console.log(`${this.name} is our new ${this.prefect}`);
    }
}

class Student extends Person {

}

const myStudent1 = new Student("Bayo", "Head Boy");
const myStudent2 = new Student("Tolu", "Head Girl");
console.log(myStudent1.greet(),myStudent1.office());
console.log(myStudent2.greet(),myStudent2.office());

// to sort values from the lowest to the highest, you have to first write a function to define lower and upper values a,b

const numbers = [23, 5, 100, 56, 9, 13, 37, 10, 1];
function ascendingComp(a, b){
    return (a-b);
  }
  numbers.sort(ascendingComp);


// you can do b-a too i.e higest to lowest, note that that is not the same as reverse
const numbers2 = [23, 5, 100, 56, 9, 13, 37, 10, 1];
function ascendingComp(a, b){
    return (b-a);
  }
  numbers2.sort(ascendingComp);

// numbers2.reverse(); simply turns the array around 


